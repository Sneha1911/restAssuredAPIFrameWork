<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="6" ignored="0" total="24" passed="18">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="19746" started-at="2020-04-22T06:31:53Z" finished-at="2020-04-22T06:32:12Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="19746" started-at="2020-04-22T06:31:53Z" finished-at="2020-04-22T06:32:12Z">
      <class name="testPack.TC9_Get_Single_Employee_Data">
        <test-method status="PASS" signature="setup()[pri:0, instance:testPack.TC9_Get_Single_Employee_Data@47c62251]" name="setup" is-config="true" duration-ms="3" started-at="2020-04-22T06:31:56Z" finished-at="2020-04-22T06:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployeeData()[pri:0, instance:testPack.TC9_Get_Single_Employee_Data@47c62251]" name="getAllEmployeeData" is-config="true" duration-ms="1919" started-at="2020-04-22T06:31:56Z" finished-at="2020-04-22T06:31:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployeeData -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:testPack.TC9_Get_Single_Employee_Data@47c62251]" name="checkContentLength" duration-ms="3" started-at="2020-04-22T06:31:58Z" finished-at="2020-04-22T06:31:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:testPack.TC9_Get_Single_Employee_Data@47c62251]" name="checkContentType" duration-ms="1" started-at="2020-04-22T06:31:58Z" finished-at="2020-04-22T06:31:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:testPack.TC9_Get_Single_Employee_Data@47c62251]" name="checkResponseBody" duration-ms="3" started-at="2020-04-22T06:31:58Z" finished-at="2020-04-22T06:31:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<false> but was:<true>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<false> but was:<true>
at org.junit.Assert.fail(Assert.java:93)
at org.junit.Assert.failNotEquals(Assert.java:647)
at org.junit.Assert.assertEquals(Assert.java:128)
at org.junit.Assert.assertEquals(Assert.java:147)
at testPack.TC9_Get_Single_Employee_Data.checkResponseBody(TC9_Get_Single_Employee_Data.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:testPack.TC9_Get_Single_Employee_Data@47c62251]" name="checkResponseTime" duration-ms="2" started-at="2020-04-22T06:31:58Z" finished-at="2020-04-22T06:31:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:testPack.TC9_Get_Single_Employee_Data@47c62251]" name="checkServerType" duration-ms="4" started-at="2020-04-22T06:31:58Z" finished-at="2020-04-22T06:31:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="FAIL" signature="checkStatusCode()[pri:0, instance:testPack.TC9_Get_Single_Employee_Data@47c62251]" name="checkStatusCode" duration-ms="4" started-at="2020-04-22T06:31:58Z" finished-at="2020-04-22T06:31:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<400> but was:<200>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<400> but was:<200>
at org.junit.Assert.fail(Assert.java:93)
at org.junit.Assert.failNotEquals(Assert.java:647)
at org.junit.Assert.assertEquals(Assert.java:128)
at org.junit.Assert.assertEquals(Assert.java:472)
at org.junit.Assert.assertEquals(Assert.java:456)
at testPack.TC9_Get_Single_Employee_Data.checkStatusCode(TC9_Get_Single_Employee_Data.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="FAIL" signature="checkStatusLIne()[pri:0, instance:testPack.TC9_Get_Single_Employee_Data@47c62251]" name="checkStatusLIne" duration-ms="3" started-at="2020-04-22T06:31:58Z" finished-at="2020-04-22T06:31:58Z">
          <exception class="org.junit.ComparisonFailure">
            <message>
              <![CDATA[expected:<HTTP/1.1 [400 Bad Request]> but was:<HTTP/1.1 [200 OK]>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.junit.ComparisonFailure: expected:<HTTP/1.1 [400 Bad Request]> but was:<HTTP/1.1 [200 OK]>
at org.junit.Assert.assertEquals(Assert.java:125)
at org.junit.Assert.assertEquals(Assert.java:147)
at testPack.TC9_Get_Single_Employee_Data.checkStatusLIne(TC9_Get_Single_Employee_Data.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.junit.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLIne -->
        <test-method status="FAIL" signature="contentEncoding()[pri:0, instance:testPack.TC9_Get_Single_Employee_Data@47c62251]" name="contentEncoding" duration-ms="4" started-at="2020-04-22T06:31:58Z" finished-at="2020-04-22T06:31:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<null> but was:<gzip>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<null> but was:<gzip>
at org.junit.Assert.fail(Assert.java:93)
at org.junit.Assert.failNotEquals(Assert.java:647)
at org.junit.Assert.assertEquals(Assert.java:128)
at org.junit.Assert.assertEquals(Assert.java:147)
at testPack.TC9_Get_Single_Employee_Data.contentEncoding(TC9_Get_Single_Employee_Data.java:87)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contentEncoding -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testPack.TC9_Get_Single_Employee_Data@47c62251]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-04-22T06:31:58Z" finished-at="2020-04-22T06:31:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testPack.TC9_Get_Single_Employee_Data -->
      <class name="testPack.TC10_Post_Create_Emp_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:testPack.TC10_Post_Create_Emp_Record@3e6fa38a]" name="setup" is-config="true" duration-ms="3" started-at="2020-04-22T06:31:58Z" finished-at="2020-04-22T06:31:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmp()[pri:0, instance:testPack.TC10_Post_Create_Emp_Record@3e6fa38a]" name="createEmp" is-config="true" duration-ms="6077" started-at="2020-04-22T06:31:58Z" finished-at="2020-04-22T06:32:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmp -->
        <test-method status="PASS" signature="resValidation()[pri:0, instance:testPack.TC10_Post_Create_Emp_Record@3e6fa38a]" name="resValidation" duration-ms="7" started-at="2020-04-22T06:32:04Z" finished-at="2020-04-22T06:32:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resValidation -->
        <test-method status="PASS" signature="statusCodeValidation()[pri:0, instance:testPack.TC10_Post_Create_Emp_Record@3e6fa38a]" name="statusCodeValidation" duration-ms="2" started-at="2020-04-22T06:32:04Z" finished-at="2020-04-22T06:32:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusCodeValidation -->
        <test-method status="PASS" signature="statusLineValidation()[pri:0, instance:testPack.TC10_Post_Create_Emp_Record@3e6fa38a]" name="statusLineValidation" duration-ms="1" started-at="2020-04-22T06:32:04Z" finished-at="2020-04-22T06:32:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusLineValidation -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:testPack.TC10_Post_Create_Emp_Record@3e6fa38a]" name="teardown" is-config="true" duration-ms="0" started-at="2020-04-22T06:32:04Z" finished-at="2020-04-22T06:32:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- testPack.TC10_Post_Create_Emp_Record -->
      <class name="testPack.TC8_Get_All_Employees">
        <test-method status="PASS" signature="setup()[pri:0, instance:testPack.TC8_Get_All_Employees@6f7fd0e6]" name="setup" is-config="true" duration-ms="81" started-at="2020-04-22T06:31:53Z" finished-at="2020-04-22T06:31:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:testPack.TC8_Get_All_Employees@6f7fd0e6]" name="getAllEmployees" is-config="true" duration-ms="3108" started-at="2020-04-22T06:31:53Z" finished-at="2020-04-22T06:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:testPack.TC8_Get_All_Employees@6f7fd0e6]" name="checkContentLength" duration-ms="14" started-at="2020-04-22T06:31:56Z" finished-at="2020-04-22T06:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:testPack.TC8_Get_All_Employees@6f7fd0e6]" name="checkContentType" duration-ms="3" started-at="2020-04-22T06:31:56Z" finished-at="2020-04-22T06:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkCookies()[pri:0, instance:testPack.TC8_Get_All_Employees@6f7fd0e6]" name="checkCookies" duration-ms="4" started-at="2020-04-22T06:31:56Z" finished-at="2020-04-22T06:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCookies -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:testPack.TC8_Get_All_Employees@6f7fd0e6]" name="checkResponseBody" duration-ms="51" started-at="2020-04-22T06:31:56Z" finished-at="2020-04-22T06:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:testPack.TC8_Get_All_Employees@6f7fd0e6]" name="checkResponseTime" duration-ms="3" started-at="2020-04-22T06:31:56Z" finished-at="2020-04-22T06:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:testPack.TC8_Get_All_Employees@6f7fd0e6]" name="checkServerType" duration-ms="3" started-at="2020-04-22T06:31:56Z" finished-at="2020-04-22T06:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:testPack.TC8_Get_All_Employees@6f7fd0e6]" name="checkStatusCode" duration-ms="2" started-at="2020-04-22T06:31:56Z" finished-at="2020-04-22T06:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLIne()[pri:0, instance:testPack.TC8_Get_All_Employees@6f7fd0e6]" name="checkStatusLIne" duration-ms="2" started-at="2020-04-22T06:31:56Z" finished-at="2020-04-22T06:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLIne -->
        <test-method status="PASS" signature="contentEncoding()[pri:0, instance:testPack.TC8_Get_All_Employees@6f7fd0e6]" name="contentEncoding" duration-ms="3" started-at="2020-04-22T06:31:56Z" finished-at="2020-04-22T06:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contentEncoding -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testPack.TC8_Get_All_Employees@6f7fd0e6]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-04-22T06:31:56Z" finished-at="2020-04-22T06:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testPack.TC8_Get_All_Employees -->
      <class name="testPack.TC12_Delete_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:testPack.TC12_Delete_Employee_Record@77caeb3e]" name="setup" is-config="true" duration-ms="3" started-at="2020-04-22T06:32:08Z" finished-at="2020-04-22T06:32:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmp()[pri:0, instance:testPack.TC12_Delete_Employee_Record@77caeb3e]" name="createEmp" is-config="true" duration-ms="4384" started-at="2020-04-22T06:32:08Z" finished-at="2020-04-22T06:32:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmp -->
        <test-method status="FAIL" signature="resValidation()[pri:0, instance:testPack.TC12_Delete_Employee_Record@77caeb3e]" name="resValidation" duration-ms="3" started-at="2020-04-22T06:32:12Z" finished-at="2020-04-22T06:32:12Z">
          <exception class="junit.framework.AssertionFailedError">
            <message>
              <![CDATA[expected:<false> but was:<true>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError: expected:<false> but was:<true>
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:147)
at junit.framework.Assert.assertEquals(Assert.java:153)
at testPack.TC12_Delete_Employee_Record.resValidation(TC12_Delete_Employee_Record.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resValidation -->
      </class> <!-- testPack.TC12_Delete_Employee_Record -->
      <class name="testPack.TC11_Put_Employee_Data">
        <test-method status="PASS" signature="setup()[pri:0, instance:testPack.TC11_Put_Employee_Data@66a3ffec]" name="setup" is-config="true" duration-ms="2" started-at="2020-04-22T06:32:04Z" finished-at="2020-04-22T06:32:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmp()[pri:0, instance:testPack.TC11_Put_Employee_Data@66a3ffec]" name="createEmp" is-config="true" duration-ms="3925" started-at="2020-04-22T06:32:04Z" finished-at="2020-04-22T06:32:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmp -->
        <test-method status="FAIL" signature="resValidation()[pri:0, instance:testPack.TC11_Put_Employee_Data@66a3ffec]" name="resValidation" duration-ms="3" started-at="2020-04-22T06:32:08Z" finished-at="2020-04-22T06:32:08Z">
          <exception class="junit.framework.AssertionFailedError">
            <message>
              <![CDATA[expected:<false> but was:<true>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError: expected:<false> but was:<true>
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:147)
at junit.framework.Assert.assertEquals(Assert.java:153)
at testPack.TC11_Put_Employee_Data.resValidation(TC11_Put_Employee_Data.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resValidation -->
        <test-method status="PASS" signature="statusCodeValidation()[pri:0, instance:testPack.TC11_Put_Employee_Data@66a3ffec]" name="statusCodeValidation" duration-ms="1" started-at="2020-04-22T06:32:08Z" finished-at="2020-04-22T06:32:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusCodeValidation -->
        <test-method status="PASS" signature="statusLineValidation()[pri:0, instance:testPack.TC11_Put_Employee_Data@66a3ffec]" name="statusLineValidation" duration-ms="1" started-at="2020-04-22T06:32:08Z" finished-at="2020-04-22T06:32:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusLineValidation -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:testPack.TC11_Put_Employee_Data@66a3ffec]" name="teardown" is-config="true" duration-ms="0" started-at="2020-04-22T06:32:08Z" finished-at="2020-04-22T06:32:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- testPack.TC11_Put_Employee_Data -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
